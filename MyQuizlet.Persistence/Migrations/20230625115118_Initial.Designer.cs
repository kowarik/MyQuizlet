// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyQuizlet.Persistence.DBContext;

#nullable disable

namespace MyQuizlet.Persistence.Migrations
{
    [DbContext(typeof(MyQuizletDbContext))]
    [Migration("20230625115118_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MyQuizlet.Domain.Entities.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeckId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Definition")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EnglishLevel")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DeckId");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70adbf2a-f318-4879-b065-01d73ab30bb8"),
                            CreatedDate = new DateTime(2023, 6, 25, 14, 51, 18, 172, DateTimeKind.Local).AddTicks(7797),
                            Definition = "Яблоко",
                            EnglishLevel = 1,
                            Term = "Apple"
                        },
                        new
                        {
                            Id = new Guid("f4d86b92-96cd-49e2-aa5d-f2a7fcfe9e64"),
                            CreatedDate = new DateTime(2023, 6, 25, 14, 51, 18, 172, DateTimeKind.Local).AddTicks(7840),
                            Definition = "Test",
                            EnglishLevel = 1,
                            Term = "Test"
                        });
                });

            modelBuilder.Entity("MyQuizlet.Domain.Entities.Deck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeckName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Decks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b03be600-2c0a-4b99-adb3-b48e897ae20d"),
                            CreatedDate = new DateTime(2023, 6, 25, 14, 51, 18, 172, DateTimeKind.Local).AddTicks(7988),
                            DeckName = "MyTestDeck1",
                            Description = "this is my deck"
                        },
                        new
                        {
                            Id = new Guid("a80f8082-3567-44a3-8ef5-6be234083f57"),
                            CreatedDate = new DateTime(2023, 6, 25, 14, 51, 18, 172, DateTimeKind.Local).AddTicks(7999),
                            DeckName = "MyTestDeck2",
                            Description = "this is my deck"
                        });
                });

            modelBuilder.Entity("MyQuizlet.Domain.Entities.Card", b =>
                {
                    b.HasOne("MyQuizlet.Domain.Entities.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckId");

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("MyQuizlet.Domain.Entities.Deck", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
